{"version":3,"file":"TimelineMiniMap.js","sourceRoot":"","sources":["../../../../../../front_end/panels/timeline/TimelineMiniMap.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2023 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../core/common/common.js';\nimport * as TraceEngine from '../../models/trace/trace.js';\nimport * as PerfUI from '../../ui/legacy/components/perf_ui/perf_ui.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\nimport {\n  TimelineEventOverviewCPUActivity,\n  TimelineEventOverviewNetwork,\n  TimelineEventOverviewResponsiveness,\n  type TimelineEventOverview,\n  TimelineFilmStripOverview,\n  TimelineEventOverviewMemory,\n} from './TimelineEventOverview.js';\n\nimport {type PerformanceModel} from './PerformanceModel.js';\nimport miniMapStyles from './timelineMiniMap.css.js';\n\nexport interface OverviewData {\n  performanceModel: PerformanceModel|null;\n  traceParsedData: TraceEngine.Handlers.Migration.PartialTraceData|null;\n  settings: {\n    showScreenshots: boolean,\n    showMemory: boolean,\n  };\n}\n\n/**\n * This component wraps the generic PerfUI Overview component and configures it\n * specifically for the Performance Panel, including injecting the CSS we use\n * to customise how the components render within the Performance Panel.\n */\nexport class TimelineMiniMap extends\n    Common.ObjectWrapper.eventMixin<PerfUI.TimelineOverviewPane.EventTypes, typeof UI.Widget.VBox>(UI.Widget.VBox) {\n  #overviewComponent = new PerfUI.TimelineOverviewPane.TimelineOverviewPane('timeline');\n  #controls: TimelineEventOverview[] = [];\n\n  constructor() {\n    super();\n    this.element.classList.add('timeline-minimap');\n\n    this.#overviewComponent.show(this.element);\n    // Push the event up into the parent component so the panel knows when the window is changed.\n    this.#overviewComponent.addEventListener(PerfUI.TimelineOverviewPane.Events.WindowChanged, event => {\n      this.dispatchEventToListeners(PerfUI.TimelineOverviewPane.Events.WindowChanged, event.data);\n    });\n  }\n\n  override wasShown(): void {\n    super.wasShown();\n    this.registerCSSFiles([miniMapStyles]);\n  }\n\n  reset(): void {\n    this.#overviewComponent.reset();\n  }\n\n  setNavStartTimes(navStartTimes: Map<string, TraceEngine.Legacy.Event>): void {\n    this.#overviewComponent.setNavStartTimes(navStartTimes);\n  }\n\n  setBounds(min: number, max: number): void {\n    this.#overviewComponent.setBounds(min, max);\n  }\n\n  setWindowTimes(left: number, right: number): void {\n    this.#overviewComponent.setWindowTimes(left, right);\n  }\n\n  setMarkers(markers: Map<number, Element>): void {\n    this.#overviewComponent.setMarkers(markers);\n  }\n\n  updateControls(data: OverviewData): void {\n    this.#controls = [];\n    if (data.traceParsedData) {\n      this.#controls.push(new TimelineEventOverviewResponsiveness(data.traceParsedData));\n    }\n    this.#controls.push(new TimelineEventOverviewCPUActivity());\n    if (data.traceParsedData) {\n      this.#controls.push(new TimelineEventOverviewNetwork(data.traceParsedData));\n    }\n    if (data.settings.showScreenshots && data.traceParsedData) {\n      const filmStrip = TraceEngine.Extras.FilmStrip.fromTraceData(data.traceParsedData);\n      if (filmStrip.frames.length) {\n        this.#controls.push(new TimelineFilmStripOverview(filmStrip));\n      }\n    }\n    if (data.settings.showMemory) {\n      this.#controls.push(new TimelineEventOverviewMemory());\n    }\n    for (const control of this.#controls) {\n      control.setModel(data.performanceModel);\n    }\n    this.#overviewComponent.setOverviewControls(this.#controls);\n  }\n}\n"]}