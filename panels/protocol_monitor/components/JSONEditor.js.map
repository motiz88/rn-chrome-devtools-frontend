{"version":3,"file":"JSONEditor.js","sourceRoot":"","sources":["../../../../../../../front_end/panels/protocol_monitor/components/JSONEditor.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2023 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nimport '../../recorder/components/components.js';\n\nimport * as Host from '../../../core/host/host.js';\nimport * as SDK from '../../../core/sdk/sdk.js';\nimport * as Buttons from '../../../ui/components/buttons/buttons.js';\nimport * as Dialogs from '../../../ui/components/dialogs/dialogs.js';\nimport * as Menus from '../../../ui/components/menus/menus.js';\nimport * as UI from '../../../ui/legacy/legacy.js';\nimport * as LitHtml from '../../../ui/lit-html/lit-html.js';\nimport * as ElementsComponents from '../../elements/components/components.js';\nimport * as RecorderComponents from '../../recorder/components/components.js';\n\nimport editorWidgetStyles from './JSONEditor.css.js';\n\nconst {html, Decorators, LitElement, Directives, nothing} = LitHtml;\nconst {customElement, property, state} = Decorators;\nconst {live, classMap, repeat} = Directives;\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'devtools-json-editor': JSONEditor;\n  }\n}\n\nconst enum ParameterType {\n  String = 'string',\n  Number = 'number',\n  Boolean = 'boolean',\n  Array = 'array',\n  Object = 'object',\n}\n\ninterface BaseParameter {\n  optional: boolean;\n  name: string;\n  typeRef?: string;\n  description: string;\n}\n\ninterface ArrayParameter extends BaseParameter {\n  type: ParameterType.Array;\n  value: Parameter[];\n}\n\ninterface NumberParameter extends BaseParameter {\n  type: ParameterType.Number;\n  value?: number;\n}\n\ninterface StringParameter extends BaseParameter {\n  type: ParameterType.String;\n  value?: string;\n}\n\ninterface BooleanParameter extends BaseParameter {\n  type: ParameterType.Boolean;\n  value?: boolean;\n}\n\ninterface ObjectParameter extends BaseParameter {\n  type: ParameterType.Object;\n  value: Parameter[];\n}\n\nexport type Parameter = ArrayParameter|NumberParameter|StringParameter|BooleanParameter|ObjectParameter;\n\nexport interface Command {\n  command: string;\n  parameters: {[x: string]: unknown};\n  targetId?: string;\n}\n\n/**\n * Parents should listen for this event and register the listeners provided by\n * this event\"\n */\nexport class SubmitEditorEvent extends Event {\n  static readonly eventName = 'submiteditor';\n  readonly data: Command;\n\n  constructor(data: Command) {\n    super(SubmitEditorEvent.eventName);\n    this.data = data;\n  }\n}\n\nconst splitDescription = (description: string): [string, string] => {\n  // If the description is too long we make the UI a bit better by highlighting the first sentence\n  // which contains the most informations.\n  // The number 150 has been chosen arbitrarily\n  if (description.length > 150) {\n    const [firstSentence, restOfDescription] = description.split('.');\n    // To make the UI nicer, we add a dot at the end of the first sentence.\n    firstSentence + '.';\n    return [firstSentence, restOfDescription];\n  }\n  return [description, ''];\n};\n\nconst DUMMY_DATA = 'dummy';\n\n@customElement('devtools-json-editor')\nexport class JSONEditor extends LitElement {\n  static override styles = [editorWidgetStyles];\n  @property()\n  declare metadataByCommand: Map<string, {parameters: Parameter[], description: string, replyArgs: string[]}>;\n  @property() declare typesByName: Map<string, Parameter[]>;\n  @property() declare targetManager;\n  @state() declare parameters: Parameter[];\n  @state() command: string = '';\n  @state() targetId?: string;\n\n  #hintPopoverHelper?: UI.PopoverHelper.PopoverHelper;\n  constructor() {\n    super();\n    this.parameters = [];\n    this.targetManager = SDK.TargetManager.TargetManager.instance();\n    this.targetId = this.targetManager.targets().length !== 0 ? this.targetManager.targets()[0].id() : undefined;\n    this.addEventListener('keydown', (event: Event) => {\n      if ((event as KeyboardEvent).key === 'Enter' &&\n          ((event as KeyboardEvent).metaKey || (event as KeyboardEvent).ctrlKey)) {\n        this.dispatchEvent(new SubmitEditorEvent({\n          command: this.command,\n          parameters: this.getParameters(),\n          targetId: this.targetId,\n        }));\n      }\n    });\n  }\n\n  override connectedCallback(): void {\n    super.connectedCallback();\n    this.#hintPopoverHelper = new UI.PopoverHelper.PopoverHelper(this, event => this.#handlePopoverDescriptions(event));\n    this.#hintPopoverHelper.setDisableOnClick(true);\n    this.#hintPopoverHelper.setTimeout(300);\n    this.#hintPopoverHelper.setHasPadding(true);\n  }\n\n  override disconnectedCallback(): void {\n    super.disconnectedCallback();\n    this.#hintPopoverHelper?.hidePopover();\n    this.#hintPopoverHelper?.dispose();\n  }\n\n  #convertObjectToParameterSchema(key: string, value: unknown, schema?: Parameter, initialSchema?: Parameter[]):\n      Parameter {\n    const type = schema?.type || typeof value;\n    const description = schema?.description ?? '';\n    const optional = schema?.optional ?? true;\n\n    switch (type) {\n      case 'string':\n      case 'boolean':\n      case 'number':\n        return {\n          type,\n          name: key,\n          optional,\n          typeRef: schema?.typeRef,\n          value,\n          description,\n        } as Parameter;\n      case 'object': {\n        if (typeof value !== 'object' || value === null) {\n          throw Error('Wrong value');\n        }\n        const typeRef = schema?.typeRef;\n        if (!typeRef) {\n          break;\n        }\n\n        let nestedType;\n        if (typeRef === DUMMY_DATA) {\n          nestedType = initialSchema;\n        } else {\n          nestedType = this.typesByName.get(typeRef);\n        }\n\n        if (!nestedType) {\n          break;\n        }\n        const objectValues = [];\n        for (const objectKey of Object.keys(value as object)) {\n          const objectType = nestedType.find(param => param.name === objectKey);\n          objectValues.push(this.#convertObjectToParameterSchema(\n              objectKey, (value as Record<string, unknown>)[objectKey], objectType as Parameter));\n        }\n        return {\n          type: ParameterType.Object,\n          name: key,\n          optional: schema.optional,\n          typeRef: schema.typeRef,\n          value: objectValues,\n          description,\n        };\n      }\n      case 'array': {\n        const typeRef = schema?.typeRef;\n        if (!typeRef) {\n          throw Error('No type ref');\n        }\n\n        if (!Array.isArray(value)) {\n          throw Error('Wrong value');\n        }\n        const nestedType = this.#isTypePrimitive(typeRef) ? undefined : {\n          optional: true,\n          type: ParameterType.Object,\n          value: [],\n          typeRef,\n          description: '',\n          name: '',\n        } as Parameter;\n\n        const objectValues = [];\n\n        for (let i = 0; i < value.length; i++) {\n          const temp = this.#convertObjectToParameterSchema(`${i}`, value[i], nestedType);\n          objectValues.push(temp);\n        }\n        return {\n          type: ParameterType.Array,\n          name: key,\n          optional: optional,\n          typeRef: schema?.typeRef,\n          value: objectValues,\n          description,\n        };\n      }\n    }\n    return {\n      type,\n      name: key,\n      optional,\n      typeRef: schema?.typeRef,\n      value,\n      description,\n    } as Parameter;\n  }\n\n  displayCommand(command: string, parameters: {\n    [paramName: string]: unknown,\n  }): void {\n    this.command = command;\n    const schema = this.metadataByCommand.get(this.command);\n    if (!schema?.parameters) {\n      return;\n    }\n    this.parameters = this.#convertObjectToParameterSchema(\n                              '', parameters, {\n                                'typeRef': DUMMY_DATA,\n                                'type': ParameterType.Object,\n                                'name': '',\n                                'description': '',\n                                'optional': true,\n                                'value': [],\n                              },\n                              schema.parameters)\n                          .value as Parameter[];\n    this.requestUpdate();\n  }\n\n  #handlePopoverDescriptions(event: MouseEvent):\n      {box: AnchorBox, show: (popover: UI.GlassPane.GlassPane) => Promise<boolean>}|null {\n    const hintElement = event.composedPath()[0] as HTMLElement;\n    const elementData = this.#getDescriptionAndTypeForElement(hintElement);\n    if (!elementData?.description) {\n      return null;\n    }\n    const [head, tail] = splitDescription(elementData.description);\n    const type = elementData.type;\n    const replyArgs = elementData.replyArgs;\n    let popupContent = '';\n    // replyArgs and type cannot get into conflict because replyArgs is attached to a command and type to a parameter\n    if (replyArgs) {\n      popupContent = tail + `Returns: ${replyArgs}<br>`;\n    } else if (type) {\n      popupContent = tail + `<br>Type: ${type}<br>`;\n    } else {\n      popupContent = tail;\n    }\n\n    return {\n      box: hintElement.boxInWindow(),\n      show: async(popover: UI.GlassPane.GlassPane): Promise<boolean> => {\n        const popupElement = new ElementsComponents.CSSHintDetailsView.CSSHintDetailsView({\n          'getMessage': (): string => `<code><span>${head}</span></code>`,\n          'getPossibleFixMessage': (): string => popupContent,\n          'getLearnMoreLink': (): string =>\n              `https://chromedevtools.github.io/devtools-protocol/tot/${this.command.split('.')[0]}/`,\n        });\n        popover.contentElement.appendChild(popupElement);\n        return true;\n      },\n    };\n  }\n\n  #getDescriptionAndTypeForElement(hintElement: HTMLElement):\n      {description: string, type?: ParameterType, replyArgs?: string[]}|undefined {\n    if (hintElement.matches('.command')) {\n      const metadata = this.metadataByCommand.get(this.command);\n      if (metadata) {\n        return {description: metadata.description, replyArgs: metadata.replyArgs};\n      }\n    }\n    if (hintElement.matches('.parameter')) {\n      const id = hintElement.dataset.paramid;\n      if (!id) {\n        return;\n      }\n      const realParamId = id.split('.');\n      const {parameter} = this.#getChildByPath(realParamId);\n      if (!parameter.description) {\n        return;\n      }\n      return {description: parameter.description, type: parameter.type};\n    }\n    return;\n  }\n\n  #copyToClipboard(): void {\n    const commandJson = JSON.stringify({command: this.command, parameters: this.getParameters()});\n    Host.InspectorFrontendHost.InspectorFrontendHostInstance.copyText(commandJson);\n  }\n\n  #handleCommandSend(): void {\n    this.dispatchEvent(new SubmitEditorEvent({\n      command: this.command,\n      parameters: this.getParameters(),\n      targetId: this.targetId,\n    }));\n  }\n\n  getParameters(): {[key: string]: unknown} {\n    const formatParameterValue = (parameter: Parameter): unknown => {\n      if (!parameter.value) {\n        return;\n      }\n      switch (parameter.type) {\n        case 'number': {\n          return Number(parameter.value);\n        }\n        case 'boolean': {\n          return Boolean(parameter.value);\n        }\n        case 'object': {\n          const nestedParameters: {[key: string]: unknown} = {};\n\n          for (const subParameter of parameter.value) {\n            const formattedValue = formatParameterValue(subParameter);\n            if (formattedValue !== undefined) {\n              nestedParameters[subParameter.name] = formatParameterValue(subParameter);\n            }\n          }\n          if (Object.keys(nestedParameters).length === 0) {\n            return undefined;\n          }\n          return nestedParameters;\n        }\n        case 'array': {\n          const nestedArrayParameters = [];\n          for (const subParameter of parameter.value) {\n            nestedArrayParameters.push(formatParameterValue(subParameter));\n          }\n          return nestedArrayParameters;\n        }\n        default: {\n          return parameter.value;\n        }\n      }\n    };\n\n    const formattedParameters: {[key: string]: unknown} = {};\n    for (const parameter of this.parameters) {\n      formattedParameters[parameter.name] = formatParameterValue(parameter);\n    }\n    return formatParameterValue({\n             type: ParameterType.Object,\n             name: DUMMY_DATA,\n             optional: true,\n             value: this.parameters,\n             description: '',\n           }) as {[key: string]: unknown};\n  }\n\n  populateParametersForCommand(): void {\n    const commandParameters = this.metadataByCommand.get(this.command)?.parameters;\n    if (!commandParameters) {\n      return;\n    }\n    this.parameters = commandParameters.map((parameter: Parameter) => {\n      if (parameter.type === 'object') {\n        const typeInfos = this.typesByName.get(parameter.typeRef as string) ?? [];\n        return {\n          optional: parameter.optional,\n          type: parameter.type,\n          description: parameter.description,\n          typeRef: parameter.typeRef,\n          value: typeInfos.map(type => {\n            const param: Parameter = {\n              optional: type.optional,\n              type: this.#isParameterSupported(parameter) ? type.type : 'string',\n              name: type.name,\n              description: type.description,\n              value: undefined,\n            } as Parameter;\n            return param;\n          }),\n          name: parameter.name,\n        };\n      }\n      if (parameter.type === 'array') {\n        return {\n          optional: parameter.optional,\n          type: parameter.type,\n          description: parameter.description,\n          typeRef: parameter.typeRef,\n          value: [],\n          name: parameter.name,\n        };\n      }\n      return {\n        optional: parameter.optional,\n        type: parameter.type,\n        typeRef: this.#isParameterSupported(parameter) ? parameter.typeRef : 'string',\n        value: parameter.value || undefined,\n        name: parameter.name,\n        description: parameter.description,\n      } as Parameter;\n    });\n  }\n\n  #getChildByPath(pathArray: string[]): {parameter: Parameter, parentParameter: Parameter} {\n    let parameters = this.parameters;\n    let parentParameter;\n    for (let i = 0; i < pathArray.length; i++) {\n      const name = pathArray[i];\n      const parameter = parameters.find(param => param.name === name);\n      if (i === pathArray.length - 1) {\n        return {parameter, parentParameter} as {parameter: Parameter, parentParameter: Parameter};\n      }\n      if (parameter?.type === 'array' || parameter?.type === 'object') {\n        if (parameter.value) {\n          parameters = parameter.value;\n        }\n      } else {\n        throw new Error('Parameter on the path in not an object or an array');\n      }\n      parentParameter = parameter;\n    }\n    throw new Error('Not found');\n  }\n\n  #handleParameterInputBlur = (event: Event): void => {\n    if (event.target instanceof RecorderComponents.RecorderInput.RecorderInput) {\n      const value = event.target.value;\n      const paramId = event.target.getAttribute('data-paramid');\n      if (paramId) {\n        const realParamId = paramId.split('.');\n        const object = this.#getChildByPath(realParamId).parameter;\n        object.value = value;\n      }\n    }\n  };\n\n  #handleCommandInputBlur = async(event: Event): Promise<void> => {\n    if (event.target instanceof RecorderComponents.RecorderInput.RecorderInput) {\n      this.command = event.target.value;\n    }\n    this.populateParametersForCommand();\n  };\n\n  #computeTargetLabel(target: SDK.Target.Target): string {\n    return `${target.name()} (${target.inspectedURL()})`;\n  }\n\n  #isParameterSupported(parameter: Parameter): boolean {\n    if (parameter.type === 'array' || parameter.type === 'object' || parameter.type === 'string' ||\n        parameter.type === 'boolean' || parameter.type === 'number') {\n      return true;\n    }\n    throw new Error('Parameter is not of correct type');\n  }\n\n  #isTypePrimitive(type: string): boolean {\n    if (type === 'string' || type === 'boolean' || type === 'number') {\n      return true;\n    }\n    return false;\n  }\n\n  #handleAddArrayParameter(parameterId: string): void {\n    const realParamId = parameterId.split('.');\n    const parameter = this.#getChildByPath(realParamId).parameter;\n    if (!parameter) {\n      return;\n    }\n    if (parameter.type !== 'array' || !parameter.typeRef) {\n      return;\n    }\n    const typeInfos = this.typesByName.get(parameter.typeRef as string) ?? [];\n\n    parameter.value.push({\n      optional: true,\n      type: this.#isTypePrimitive(parameter.typeRef) ? parameter.typeRef : 'object',\n      name: String(parameter.value.length),\n      value: typeInfos.length !== 0 ?\n          typeInfos.map(type => ({\n                          optional: type.optional,\n                          type: this.#isParameterSupported(parameter) ? type.type : 'string',\n                          name: type.name,\n                          value: undefined,\n                        })) :\n          undefined,\n    } as Parameter);\n    this.requestUpdate();\n  }\n\n  #handleDeleteArrayParameter(parameterId: string): void {\n    const realParamId = parameterId.split('.');\n    const {parameter, parentParameter} = this.#getChildByPath(realParamId);\n    if (!parameter) {\n      return;\n    }\n    if (!Array.isArray(parentParameter.value)) {\n      return;\n    }\n    parentParameter.value.splice(parentParameter.value.findIndex(p => p === parameter), 1);\n    for (let i = 0; i < parentParameter.value.length; i++) {\n      parentParameter.value[i].name = String(i);\n    }\n    this.requestUpdate();\n  }\n\n  #renderTargetSelectorRow(): LitHtml.TemplateResult|undefined {\n    const target = this.targetManager.targets().find(el => el.id() === this.targetId);\n    const targetLabel = target ? this.#computeTargetLabel(target) : '';\n    // clang-format off\n    return html`\n    <div class=\"row attribute padded\">\n      <div>target<span class=\"separator\">:</span></div>\n      <${Menus.SelectMenu.SelectMenu.litTagName}\n            class=\"target-select-menu\"\n            @selectmenuselected=${this.#onTargetSelected}\n            .showDivider=${true}\n            .showArrow=${true}\n            .sideButton=${false}\n            .showSelectedItem=${true}\n            .showConnector=${false}\n            .position=${Dialogs.Dialog.DialogVerticalPosition.BOTTOM}\n            .buttonTitle=${targetLabel}\n          >\n          ${repeat(this.targetManager.targets(), target => {\n          return LitHtml.html`\n                <${Menus.Menu.MenuItem.litTagName}\n                  .value=${target.id()}>\n                    ${this.#computeTargetLabel(target)}\n                </${Menus.Menu.MenuItem.litTagName}>\n              `;\n        },\n    )}\n          </${Menus.SelectMenu.SelectMenu.litTagName}>\n    </div>\n  `;\n    // clang-format on\n  }\n\n  #onTargetSelected(event: Menus.SelectMenu.SelectMenuItemSelectedEvent): void {\n    this.targetId = event.itemValue as string;\n    this.requestUpdate();\n  }\n\n  #renderInlineButton(opts: {\n    title: string,\n    iconName: string,\n    classMap: {[name: string]: string|boolean|number},\n    onClick: (event: MouseEvent) => void,\n  }): LitHtml.TemplateResult|undefined {\n    return html`\n          <devtools-button\n            title=${opts.title}\n            .size=${Buttons.Button.Size.MEDIUM}\n            .iconName=${opts.iconName}\n            .variant=${Buttons.Button.Variant.ROUND}\n            class=${classMap(opts.classMap)}\n            @click=${opts.onClick}\n          ></devtools-button>\n        `;\n  }\n\n  /**\n   * Renders the parameters list corresponding to a specific CDP command.\n   */\n  #renderParameters(parameters: Parameter[], id?: string, parentParameter?: Parameter, parentParameterId?: string):\n      LitHtml.TemplateResult|undefined {\n    parameters.sort((a, b) => Number(a.optional) - Number(b.optional));\n\n    // clang-format off\n    return html`\n      <ul>\n        ${repeat(parameters, parameter => {\n          const parameterId = parentParameter ? `${parentParameterId}` + '.' + `${parameter.name}` : parameter.name;\n          const subparameters: Parameter[] = parameter.type === 'array' || parameter.type === 'object' ? (parameter.value ?? []) : [];\n          const handleInputOnBlur = (event: Event): void => {\n            this.#handleParameterInputBlur(event);\n          };\n          const classes = {colorBlue: parameter.optional, parameter: true};\n          return html`\n                <li class=\"row\">\n                  <div class=\"row\">\n                    <div class=${classMap(classes)} data-paramId=${parameterId}>${parameter.name}<span class=\"separator\">:</span></div>\n                    ${parameter.type === 'array' ? html`\n                    ${this.#renderInlineButton({\n                        title: 'Add parameter',\n                        iconName: 'plus',\n                        onClick: () => this.#handleAddArrayParameter(parameterId),\n                        classMap: { deleteButton: true },\n                      })}\n                  `: nothing}\n                    ${parameter.type !== 'array' && parameter.type !== 'object' ? html`\n                    <devtools-recorder-input\n                      data-paramId=${parameterId}\n                      .value=${live(parameter.value ?? '')}\n                      .placeholder=${'Enter your parameter...'}\n                      @blur=${handleInputOnBlur}\n                    ></devtools-recorder-input>` : nothing}\n\n                    ${parameter.optional ? html`\n                      ${this.#renderInlineButton({\n                          title: 'Delete',\n                          iconName: 'minus',\n                          onClick: () => this.#handleDeleteArrayParameter(parameterId),\n                          classMap: { deleteButton: true },\n                        })}` : nothing}\n                  </div>\n                </li>\n                ${this.#renderParameters(subparameters, id, parameter, parameterId)}\n              `;\n          })}\n      </ul>\n    `;\n    // clang-format on\n  }\n\n  override render(): LitHtml.TemplateResult {\n    // clang-format off\n    return html`\n    <div class=\"wrapper\">\n      ${this.#renderTargetSelectorRow()}\n      <div class=\"row attribute padded\">\n        <div class=\"command\">command<span class=\"separator\">:</span></div>\n        <devtools-recorder-input\n          .options=${[...this.metadataByCommand.keys()]}\n          .value=${this.command}\n          .placeholder=${'Enter your command...'}\n          @blur=${this.#handleCommandInputBlur}\n        ></devtools-recorder-input>\n      </div>\n      ${this.parameters.length ? html`\n      <div class=\"row attribute padded\">\n        <div>parameters<span class=\"separator\">:</span></div>\n      </div>\n        ${this.#renderParameters(this.parameters)}\n      ` : nothing}\n    </div>\n    <devtools-pm-toolbar @copycommand=${this.#copyToClipboard} @commandsent=${this.#handleCommandSend}></devtools-pm-toolbar>`;\n    // clang-format on\n  }\n}\n"]}