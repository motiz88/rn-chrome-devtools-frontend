{"version":3,"file":"types.js","sourceRoot":"","sources":["../../../../../../../front_end/models/trace/handlers/types.ts"],"names":[],"mappings":"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","sourcesContent":["\n// Copyright 2022 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nimport type * as ModelHandlers from './ModelHandlers.js';\nimport * as Types from '../types/types.js';\n\nexport interface TraceEventHandler {\n  reset(): void;\n  initialize?(freshRecording?: boolean): void;\n  handleEvent(data: {}): void;\n  finalize?(): Promise<void>;\n  data(): unknown;\n  deps?(): TraceEventHandlerName[];\n}\nexport type TraceEventHandlerName = keyof typeof ModelHandlers;\n\n// This type maps TraceEventHandler names to the return type of their data\n// function. So, for example, if we are given an object with a key of 'foo'\n// and a value which is a TraceHandler containing a data() function that\n// returns a string, this type will be { foo: string }.\n//\n// This allows us to model the behavior of the TraceProcessor in the model,\n// which takes an object with TraceEventHandlers as part of its config, and\n// which ultimately returns an object keyed off the names of the\n// TraceEventHandlers, and with values that are derived from each\n// TraceEventHandler's data function.\n//\n// So, concretely, we provide a TraceEventHandler for calculating the #time\n// bounds of a trace called TraceBounds, whose data() function returns a\n// TraceWindow. The HandlerData, therefore, would determine that the\n// TraceProcessor would contain a key called 'TraceBounds' whose value is\n// a TraceWindow.\nexport type EnabledHandlerDataWithMeta<T extends {[key: string]: TraceEventHandler}> = {\n  // We allow the user to configure which handlers are created by passing them\n  // in when constructing a model instance. However, we then ensure that the\n  // Meta handler is added to that, as the Model relies on some of the data\n  // from the Meta handler when creating the file. Therefore, this type\n  // explicitly defines that the Meta data is present, before then extending it\n  // with the index type to represent all the other handlers.\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  Meta: Readonly<ReturnType<typeof ModelHandlers['Meta']['data']>>,\n}&{\n  // For every key in the object, look up the TraceEventHandler's data function\n  // and use its return type as the value for the object.\n  [K in keyof T]: Readonly<ReturnType<T[K]['data']>>;\n};\n\nexport type HandlersWithMeta<T extends {[key: string]: TraceEventHandler}> = {\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  Meta: typeof ModelHandlers.Meta,\n}&{\n  [K in keyof T]: T[K];\n};\n\n// Represents the final parsed data from all of the handlers. Note that because\n// we are currently in the middle of the migration of data engines, not all the\n// handlers are enabled. Therefore for now you should use the type defined in\n// models/trace/handlers/Migration.ts, `PartialTraceData`, which\n// represents the final parsed data for only the enabled handlers.\nexport type TraceParseData = Readonly<EnabledHandlerDataWithMeta<typeof ModelHandlers>>;\n\nexport type Handlers = typeof ModelHandlers;\n\nexport const enum HandlerState {\n  UNINITIALIZED = 1,\n  INITIALIZED = 2,\n  FINALIZED = 3,\n}\n\nexport const enum EventCategory {\n  Parse = 'Parse',\n  V8 = 'V8',\n  Js = 'Js',\n  Gc = 'Gc',\n  Layout = 'Layout',\n  Paint = 'Paint',\n  Load = 'Load',\n  Other = 'Other',\n}\n\nexport const KNOWN_EVENTS = new Map([\n  /* Task/Other */\n  [Types.TraceEvents.KnownEventName.Program, {category: EventCategory.Other, label: 'Other'}],\n  [Types.TraceEvents.KnownEventName.RunTask, {category: EventCategory.Other, label: 'Run Task'}],\n  [Types.TraceEvents.KnownEventName.AsyncTask, {category: EventCategory.Other, label: 'Async Task'}],\n  /* Load */\n  [Types.TraceEvents.KnownEventName.XHRLoad, {category: EventCategory.Load, label: 'Load'}],\n  [Types.TraceEvents.KnownEventName.XHRReadyStateChange, {category: EventCategory.Load, label: 'ReadyStateChange'}],\n  /* Parse */\n  [Types.TraceEvents.KnownEventName.ParseHTML, {category: EventCategory.Parse, label: 'Parse HTML'}],\n  [Types.TraceEvents.KnownEventName.ParseCSS, {category: EventCategory.Parse, label: 'Parse StyleSheet'}],\n  /* V8 */\n  [Types.TraceEvents.KnownEventName.CompileScript, {category: EventCategory.V8, label: 'Compile Script'}],\n  [Types.TraceEvents.KnownEventName.CompileCode, {category: EventCategory.V8, label: 'Compile Code'}],\n  [Types.TraceEvents.KnownEventName.CompileModule, {category: EventCategory.V8, label: 'Compile Module'}],\n  [Types.TraceEvents.KnownEventName.Optimize, {category: EventCategory.V8, label: 'Optimize'}],\n  [\n    Types.TraceEvents.KnownEventName.WasmStreamFromResponseCallback,\n    {category: EventCategory.Js, label: 'Streaming Wasm Response'},\n  ],\n  [Types.TraceEvents.KnownEventName.WasmCompiledModule, {category: EventCategory.Js, label: 'Compiled Wasm Module'}],\n  [Types.TraceEvents.KnownEventName.WasmCachedModule, {category: EventCategory.Js, label: 'Cached Wasm Module'}],\n  [Types.TraceEvents.KnownEventName.WasmModuleCacheHit, {category: EventCategory.Js, label: 'Wasm Module Cache Hit'}],\n  [\n    Types.TraceEvents.KnownEventName.WasmModuleCacheInvalid,\n    {category: EventCategory.Js, label: 'Wasm Module Cache Invalid'},\n  ],\n  /* Js */\n  [Types.TraceEvents.KnownEventName.RunMicrotasks, {category: EventCategory.Js, label: 'Run Microtasks'}],\n  [Types.TraceEvents.KnownEventName.EvaluateScript, {category: EventCategory.Js, label: 'Evaluate Script'}],\n  [Types.TraceEvents.KnownEventName.FunctionCall, {category: EventCategory.Js, label: 'Function Call'}],\n  [Types.TraceEvents.KnownEventName.EventDispatch, {category: EventCategory.Js, label: 'Event'}],\n  [Types.TraceEvents.KnownEventName.EvaluateModule, {category: EventCategory.Js, label: 'Evaluate Module'}],\n  [Types.TraceEvents.KnownEventName.V8Execute, {category: EventCategory.Js, label: 'Execute'}],\n  [\n    Types.TraceEvents.KnownEventName.RequestMainThreadFrame,\n    {category: EventCategory.Js, label: 'Request Main Thread Frame'},\n  ],\n  [\n    Types.TraceEvents.KnownEventName.RequestAnimationFrame,\n    {category: EventCategory.Js, label: 'Request Animation Frame'},\n  ],\n  [\n    Types.TraceEvents.KnownEventName.CancelAnimationFrame,\n    {category: EventCategory.Js, label: 'Cancel Animation Frame'},\n  ],\n  [Types.TraceEvents.KnownEventName.FireAnimationFrame, {category: EventCategory.Js, label: 'Animation Frame'}],\n  [Types.TraceEvents.KnownEventName.RequestIdleCallback, {category: EventCategory.Js, label: 'Request Idle Callback'}],\n  [Types.TraceEvents.KnownEventName.CancelIdleCallback, {category: EventCategory.Js, label: 'Cancel Idle Callback'}],\n  [Types.TraceEvents.KnownEventName.FireIdleCallback, {category: EventCategory.Js, label: 'Idle Callback'}],\n  [Types.TraceEvents.KnownEventName.TimerInstall, {category: EventCategory.Js, label: 'Timer Installed'}],\n  [Types.TraceEvents.KnownEventName.TimerRemove, {category: EventCategory.Js, label: 'Timer Removed'}],\n  [Types.TraceEvents.KnownEventName.TimerFire, {category: EventCategory.Js, label: 'Timer Fired'}],\n  [Types.TraceEvents.KnownEventName.WebSocketCreate, {category: EventCategory.Js, label: 'Create WebSocket'}],\n  [\n    Types.TraceEvents.KnownEventName.WebSocketSendHandshake,\n    {category: EventCategory.Js, label: 'Send WebSocket Handshake'},\n  ],\n  [\n    Types.TraceEvents.KnownEventName.WebSocketReceiveHandshake,\n    {category: EventCategory.Js, label: 'Receive WebSocket Handshake'},\n  ],\n  [Types.TraceEvents.KnownEventName.WebSocketDestroy, {category: EventCategory.Js, label: 'Destroy WebSocket'}],\n  [Types.TraceEvents.KnownEventName.CryptoDoEncrypt, {category: EventCategory.Js, label: 'Crypto Encrypt'}],\n  [Types.TraceEvents.KnownEventName.CryptoDoEncryptReply, {category: EventCategory.Js, label: 'Crypto Encrypt Reply'}],\n  [Types.TraceEvents.KnownEventName.CryptoDoDecrypt, {category: EventCategory.Js, label: 'Crypto Decrypt'}],\n  [Types.TraceEvents.KnownEventName.CryptoDoDecryptReply, {category: EventCategory.Js, label: 'Crypto Decrypt Reply'}],\n  [Types.TraceEvents.KnownEventName.CryptoDoDigest, {category: EventCategory.Js, label: 'Crypto Digest'}],\n  [Types.TraceEvents.KnownEventName.CryptoDoDigestReply, {category: EventCategory.Js, label: 'Crypto Digest Reply'}],\n  [Types.TraceEvents.KnownEventName.CryptoDoSign, {category: EventCategory.Js, label: 'Crypto Sign'}],\n  [Types.TraceEvents.KnownEventName.CryptoDoSignReply, {category: EventCategory.Js, label: 'Crypto Sign Reply'}],\n  [Types.TraceEvents.KnownEventName.CryptoDoVerify, {category: EventCategory.Js, label: 'Crypto Verify'}],\n  [Types.TraceEvents.KnownEventName.CryptoDoVerifyReply, {category: EventCategory.Js, label: 'Crypto Verify Reply'}],\n  /* Gc */\n  [Types.TraceEvents.KnownEventName.GC, {category: EventCategory.Gc, label: 'GC'}],\n  [Types.TraceEvents.KnownEventName.DOMGC, {category: EventCategory.Gc, label: 'DOM GC'}],\n  [Types.TraceEvents.KnownEventName.IncrementalGCMarking, {category: EventCategory.Gc, label: 'Incremental GC'}],\n  [Types.TraceEvents.KnownEventName.MajorGC, {category: EventCategory.Gc, label: 'Major GC'}],\n  [Types.TraceEvents.KnownEventName.MinorGC, {category: EventCategory.Gc, label: 'Minor GC'}],\n  /* Layout (a.k.a \"Rendering\") */\n  [\n    Types.TraceEvents.KnownEventName.ScheduleStyleRecalculation,\n    {category: EventCategory.Layout, label: 'Schedule Recalculate Style'},\n  ],\n  [Types.TraceEvents.KnownEventName.RecalculateStyles, {category: EventCategory.Layout, label: 'Recalculate Style'}],\n  [Types.TraceEvents.KnownEventName.Layout, {category: EventCategory.Layout, label: 'Layout'}],\n  [Types.TraceEvents.KnownEventName.UpdateLayoutTree, {category: EventCategory.Layout, label: 'Recalculate Style'}],\n  [Types.TraceEvents.KnownEventName.InvalidateLayout, {category: EventCategory.Layout, label: 'Invalidate Layout'}],\n  [\n    Types.TraceEvents.KnownEventName.LayoutInvalidationTracking,\n    {category: EventCategory.Layout, label: 'Layout Invalidation'},\n  ],\n  [\n    Types.TraceEvents.KnownEventName.ComputeIntersections,\n    {category: EventCategory.Paint, label: 'Compute Intersections'},\n  ],\n  [Types.TraceEvents.KnownEventName.HitTest, {category: EventCategory.Layout, label: 'Hit Test'}],\n  [Types.TraceEvents.KnownEventName.PrePaint, {category: EventCategory.Layout, label: 'Pre-Paint'}],\n  /* Paint */\n  [Types.TraceEvents.KnownEventName.ScrollLayer, {category: EventCategory.Paint, label: 'Scroll'}],\n  [Types.TraceEvents.KnownEventName.UpdateLayer, {category: EventCategory.Paint, label: 'Update Layer'}],\n  [Types.TraceEvents.KnownEventName.PaintSetup, {category: EventCategory.Paint, label: 'Paint Setup'}],\n  [Types.TraceEvents.KnownEventName.Paint, {category: EventCategory.Paint, label: 'Paint'}],\n  [Types.TraceEvents.KnownEventName.PaintImage, {category: EventCategory.Paint, label: 'Paint Image'}],\n  [Types.TraceEvents.KnownEventName.Commit, {category: EventCategory.Paint, label: 'Commit'}],\n  [Types.TraceEvents.KnownEventName.CompositeLayers, {category: EventCategory.Paint, label: 'Composite Layers'}],\n  [Types.TraceEvents.KnownEventName.RasterTask, {category: EventCategory.Paint, label: 'Raster'}],\n  [Types.TraceEvents.KnownEventName.ImageDecodeTask, {category: EventCategory.Paint, label: 'Decode Image Task'}],\n  [Types.TraceEvents.KnownEventName.ImageUploadTask, {category: EventCategory.Paint, label: 'Upload Image Task'}],\n  [Types.TraceEvents.KnownEventName.DecodeImage, {category: EventCategory.Paint, label: 'Decode Image'}],\n  [Types.TraceEvents.KnownEventName.ResizeImage, {category: EventCategory.Paint, label: 'Resize Image'}],\n  [Types.TraceEvents.KnownEventName.DrawLazyPixelRef, {category: EventCategory.Paint, label: 'Draw LazyPixelRef'}],\n  [Types.TraceEvents.KnownEventName.DecodeLazyPixelRef, {category: EventCategory.Paint, label: 'Decode LazyPixelRef'}],\n  [Types.TraceEvents.KnownEventName.GPUTask, {category: EventCategory.Paint, label: 'GPU Task'}],\n]);\n"]}