{"version":3,"file":"RuleSetGrid.js","sourceRoot":"","sources":["../../../../../../../../front_end/panels/application/preloading/components/RuleSetGrid.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2023 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../../../core/common/common.js';\nimport * as i18n from '../../../../core/i18n/i18n.js';\nimport type * as Protocol from '../../../../generated/protocol.js';\nimport * as DataGrid from '../../../../ui/components/data_grid/data_grid.js';\nimport * as ComponentHelpers from '../../../../ui/components/helpers/helpers.js';\nimport * as IconButton from '../../../../ui/components/icon_button/icon_button.js';\nimport * as LegacyWrapper from '../../../../ui/components/legacy_wrapper/legacy_wrapper.js';\nimport * as LitHtml from '../../../../ui/lit-html/lit-html.js';\n\nimport type * as UI from '../../../../ui/legacy/legacy.js';\n\nimport * as PreloadingHelper from '../helper/helper.js';\n\nimport ruleSetGridStyles from './ruleSetGrid.css.js';\n\nconst UIStrings = {\n  /**\n   *@description Column header for a table displaying rule sets: Indicates a rule set contains errors.\n   */\n  validity: 'Validity',\n  /**\n   *@description Column header for a table displaying rule sets: Where a rule set came from.\n   */\n  location: 'Location',\n  /**\n   *@description Column header for a table displaying rule sets: How many preloads are associated.\n   */\n  preloads: 'Preloads',\n  /**\n   *@description button: Title of button to reveal preloading attempts with filter by selected rule set\n   */\n  buttonRevealPreloadsAssociatedWithRuleSet: 'Reveal preloeads associated with this rule set',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/application/preloading/components/RuleSetGrid.ts', UIStrings);\nexport const i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nexport interface RuleSetGridRow {\n  id: string;\n  processLocalId: string;\n  preloadsStatusSummary: string;\n  ruleSetId: Protocol.Preload.RuleSetId;\n  validity: string;\n  location: string;\n}\n\n// Grid component to show SpeculationRules rule sets.\nexport class RuleSetGrid extends LegacyWrapper.LegacyWrapper.WrappableComponent<UI.Widget.VBox> {\n  static readonly litTagName = LitHtml.literal`devtools-resources-ruleset-grid`;\n\n  readonly #shadow = this.attachShadow({mode: 'open'});\n  #rows: RuleSetGridRow[] = [];\n\n  connectedCallback(): void {\n    this.#shadow.adoptedStyleSheets = [ruleSetGridStyles];\n    this.#render();\n  }\n\n  update(rows: RuleSetGridRow[]): void {\n    this.#rows = rows;\n    this.#render();\n  }\n\n  #render(): void {\n    const reportsGridData: DataGrid.DataGridController.DataGridControllerData = {\n      columns: [\n        {\n          id: 'processLocalId',\n          title: i18n.i18n.lockedString('#'),\n          widthWeighting: 5,\n          hideable: false,\n          visible: true,\n        },\n        {\n          id: 'validity',\n          title: i18nString(UIStrings.validity),\n          widthWeighting: 10,\n          hideable: false,\n          visible: true,\n        },\n        {\n          id: 'location',\n          title: i18nString(UIStrings.location),\n          widthWeighting: 80,\n          hideable: false,\n          visible: true,\n        },\n        {\n          id: 'preloadsStatusSummary',\n          title: i18nString(UIStrings.preloads),\n          widthWeighting: 80,\n          hideable: false,\n          visible: true,\n        },\n      ],\n      rows: this.#buildReportRows(),\n    };\n\n    // Disabled until https://crbug.com/1079231 is fixed.\n    // clang-format off\n    LitHtml.render(LitHtml.html`\n      <div class=\"ruleset-container\">\n        <${DataGrid.DataGridController.DataGridController.litTagName} .data=${\n            reportsGridData as DataGrid.DataGridController.DataGridControllerData}>\n        </${DataGrid.DataGridController.DataGridController.litTagName}>\n      </div>\n    `, this.#shadow, {host: this});\n    // clang-format on\n  }\n\n  #buildReportRows(): DataGrid.DataGridUtils.Row[] {\n    function preloadsStatusSummaryRenderer(\n        preloadsStatusSummary: string, ruleSetId: Protocol.Preload.RuleSetId): LitHtml.TemplateResult {\n      const revealAttemptViewWithFilter = (): void => {\n        void Common.Revealer.reveal(new PreloadingHelper.PreloadingForward.AttemptViewWithFilter(ruleSetId));\n      };\n\n      // Disabled until https://crbug.com/1079231 is fixed.\n      // clang-format off\n      return LitHtml.html`\n          <div>\n            <button class=\"link\" role=\"link\"\n              @click=${revealAttemptViewWithFilter}\n              title=${i18nString(UIStrings.buttonRevealPreloadsAssociatedWithRuleSet)}\n              style=${LitHtml.Directives.styleMap({\n                color: 'var(--color-link)',\n                'text-decoration': 'underline',\n                padding: '0',\n                border: 'none',\n                background: 'none',\n                'font-family': 'inherit',\n                'font-size': 'inherit',\n                height: '16px',\n              })}\n            >\n              <${IconButton.Icon.Icon.litTagName}\n                .data=${{\n                  iconName: 'open-externally',\n                  color: 'var(--icon-link)',\n                  width: '16px',\n                  height: '16px',\n                } as IconButton.Icon.IconData}\n                style=${LitHtml.Directives.styleMap({\n                  'vertical-align': 'sub',\n                })}\n              >\n              </${IconButton.Icon.Icon.litTagName}>\n              ${preloadsStatusSummary}\n            </button>\n          </div>\n      `;\n      // clang-format on\n    }\n\n    return this.#rows.map(row => ({\n                            cells: [\n                              {columnId: 'id', value: row.id},\n                              {columnId: 'processLocalId', value: row.processLocalId},\n                              {\n                                columnId: 'preloadsStatusSummary',\n                                value: row.preloadsStatusSummary,\n                                renderer: () => preloadsStatusSummaryRenderer(row.preloadsStatusSummary, row.ruleSetId),\n                              },\n                              {columnId: 'validity', value: row.validity},\n                              {columnId: 'location', value: row.location},\n                            ],\n                          }));\n  }\n}\n\nComponentHelpers.CustomElements.defineComponent('devtools-resources-ruleset-grid', RuleSetGrid);\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'devtools-resources-ruleset-grid': RuleSetGrid;\n  }\n}\n"]}